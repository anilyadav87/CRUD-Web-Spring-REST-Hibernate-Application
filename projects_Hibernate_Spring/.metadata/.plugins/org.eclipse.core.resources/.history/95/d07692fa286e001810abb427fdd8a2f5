package com.niit.crudhibernatespring.configuration;
import org.springframework.transaction.annotation.*;

import java.util.Properties;

import javax.sql.DataSource;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Environment;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.orm.hibernate5.HibernateTransactionManager;
import org.springframework.orm.hibernate5.LocalSessionFactoryBean;

@Configuration
@EnableTransactionManagement
@ComponentScan("com.niit.crudhibernatespring")
//@PropertySource({ "classpath:src/main/resources/db.properties" })
public class ConfigurationUser {

	//@Autowired
//	private Environment environment;
	

	@Bean(name = "dataSource")
	public DriverManagerDataSource dataSource()
	{
		/*DriverManagerDataSource driverManagerDataSource = new DriverManagerDataSource("jdbc:h2:tcp://localhost/~/test", "sa", "");
		driverManagerDataSource.setDriverClassName("org.h2.Driver");
		return driverManagerDataSource;*/
	
		System.out.println("Database method loaded");
		DriverManagerDataSource driverManagerDataSource=new DriverManagerDataSource();
		driverManagerDataSource.setDriverClassName("org.h2.Driver");
		driverManagerDataSource.setUrl("jdbc:h2:tcp://localhost/~/test");
		driverManagerDataSource.setUsername("sa");
		driverManagerDataSource.setPassword("");
		
		return driverManagerDataSource;
	}
	
	@Autowired
	@Bean(name = "sessionFactory")
	public LocalSessionFactoryBean sessionFactory(DataSource dataSource)
	{
		System.out.println("method start");
		LocalSessionFactoryBean localSessionFactoryBean = new LocalSessionFactoryBean();
		localSessionFactoryBean.setDataSource(dataSource);
		localSessionFactoryBean.setHibernateProperties(hibernateProperties());
		localSessionFactoryBean.setPackagesToScan("com.niit.crudhibernatespring.model");
		return localSessionFactoryBean;

	}
	
	@Bean(name = "transactionManager")
	@Autowired
	public HibernateTransactionManager transactionManager(SessionFactory sessionFactory)
	{
		System.err.println("transaction Method loaded");
		
		HibernateTransactionManager hibernateTransactionManager = new HibernateTransactionManager();
		hibernateTransactionManager.setSessionFactory(sessionFactory);
		return hibernateTransactionManager;
	}
	
	Properties hibernateProperties()
	{
		Properties properties = new Properties();
		properties.setProperty("hibernate.dialect","org.hibernate.dialect.H2Dialect");
		properties.setProperty("hibernate.show_sql", "true");
		properties.setProperty("hibernate.hbm2ddl.auto", "update");
		//properties.setProperty("hibernate.globally_quoted_identifiers","true");
		return properties;
	}
}